// Auto generated file, don't modify.

#ifndef CPGF_META_QTCORE_QNAMESPACE_H
#define CPGF_META_QTCORE_QNAMESPACE_H


#include <QtCore/include/meta_qtcore_qflags.h>
#include <QtCore/include/meta_qtcore_qcontainerfwd.h>

#include "cpgf/gmetadefine.h"
#include "cpgf/metadata/gmetadataconfig.h"
#include "cpgf/metadata/private/gmetadata_header.h"
#include "cpgf/gmetapolicy.h"


using namespace Qt;


namespace qt_metadata { 


template <typename D>
void buildMetaClass_Global_qnamespace(D _d)
{
    (void)_d;
    using namespace cpgf;
    
    _d.CPGF_MD_TEMPLATE _method("qt_getQtMetaObject", (const QMetaObject * (*) ())&qt_getQtMetaObject);
    _d.CPGF_MD_TEMPLATE _enum<GlobalColor>("GlobalColor")
        ._element("color0", Qt::color0)
        ._element("color1", Qt::color1)
        ._element("black", Qt::black)
        ._element("white", Qt::white)
        ._element("darkGray", Qt::darkGray)
        ._element("gray", Qt::gray)
        ._element("lightGray", Qt::lightGray)
        ._element("red", Qt::red)
        ._element("green", Qt::green)
        ._element("blue", Qt::blue)
        ._element("cyan", Qt::cyan)
        ._element("magenta", Qt::magenta)
        ._element("yellow", Qt::yellow)
        ._element("darkRed", Qt::darkRed)
        ._element("darkGreen", Qt::darkGreen)
        ._element("darkBlue", Qt::darkBlue)
        ._element("darkCyan", Qt::darkCyan)
        ._element("darkMagenta", Qt::darkMagenta)
        ._element("darkYellow", Qt::darkYellow)
        ._element("transparent", Qt::transparent)
    ;
    _d.CPGF_MD_TEMPLATE _enum<KeyboardModifier>("KeyboardModifier")
        ._element("NoModifier", Qt::NoModifier)
        ._element("ShiftModifier", Qt::ShiftModifier)
        ._element("ControlModifier", Qt::ControlModifier)
        ._element("AltModifier", Qt::AltModifier)
        ._element("MetaModifier", Qt::MetaModifier)
        ._element("KeypadModifier", Qt::KeypadModifier)
        ._element("GroupSwitchModifier", Qt::GroupSwitchModifier)
        ._element("KeyboardModifierMask", Qt::KeyboardModifierMask)
    ;
    _d.CPGF_MD_TEMPLATE _enum<Modifier>("Modifier")
        ._element("META", Qt::META)
        ._element("SHIFT", Qt::SHIFT)
        ._element("CTRL", Qt::CTRL)
        ._element("ALT", Qt::ALT)
        ._element("MODIFIER_MASK", Qt::MODIFIER_MASK)
        ._element("UNICODE_ACCEL", Qt::UNICODE_ACCEL)
    ;
    _d.CPGF_MD_TEMPLATE _enum<MouseButton>("MouseButton")
        ._element("NoButton", Qt::NoButton)
        ._element("LeftButton", Qt::LeftButton)
        ._element("RightButton", Qt::RightButton)
        ._element("MidButton", Qt::MidButton)
        ._element("MiddleButton", Qt::MiddleButton)
        ._element("BackButton", Qt::BackButton)
        ._element("XButton1", Qt::XButton1)
        ._element("ExtraButton1", Qt::ExtraButton1)
        ._element("ForwardButton", Qt::ForwardButton)
        ._element("XButton2", Qt::XButton2)
        ._element("ExtraButton2", Qt::ExtraButton2)
        ._element("TaskButton", Qt::TaskButton)
        ._element("ExtraButton3", Qt::ExtraButton3)
        ._element("ExtraButton4", Qt::ExtraButton4)
        ._element("ExtraButton5", Qt::ExtraButton5)
        ._element("ExtraButton6", Qt::ExtraButton6)
        ._element("ExtraButton7", Qt::ExtraButton7)
        ._element("ExtraButton8", Qt::ExtraButton8)
        ._element("ExtraButton9", Qt::ExtraButton9)
        ._element("ExtraButton10", Qt::ExtraButton10)
        ._element("ExtraButton11", Qt::ExtraButton11)
        ._element("ExtraButton12", Qt::ExtraButton12)
        ._element("ExtraButton13", Qt::ExtraButton13)
        ._element("ExtraButton14", Qt::ExtraButton14)
        ._element("ExtraButton15", Qt::ExtraButton15)
        ._element("ExtraButton16", Qt::ExtraButton16)
        ._element("ExtraButton17", Qt::ExtraButton17)
        ._element("ExtraButton18", Qt::ExtraButton18)
        ._element("ExtraButton19", Qt::ExtraButton19)
        ._element("ExtraButton20", Qt::ExtraButton20)
        ._element("ExtraButton21", Qt::ExtraButton21)
        ._element("ExtraButton22", Qt::ExtraButton22)
        ._element("ExtraButton23", Qt::ExtraButton23)
        ._element("ExtraButton24", Qt::ExtraButton24)
        ._element("AllButtons", Qt::AllButtons)
        ._element("MaxMouseButton", Qt::MaxMouseButton)
        ._element("MouseButtonMask", Qt::MouseButtonMask)
    ;
    _d.CPGF_MD_TEMPLATE _enum<Orientation>("Orientation")
        ._element("Horizontal", Qt::Horizontal)
        ._element("Vertical", Qt::Vertical)
    ;
    _d.CPGF_MD_TEMPLATE _enum<FocusPolicy>("FocusPolicy")
        ._element("NoFocus", Qt::NoFocus)
        ._element("TabFocus", Qt::TabFocus)
        ._element("ClickFocus", Qt::ClickFocus)
        ._element("StrongFocus", Qt::StrongFocus)
        ._element("WheelFocus", Qt::WheelFocus)
    ;
    _d.CPGF_MD_TEMPLATE _enum<TabFocusBehavior>("TabFocusBehavior")
        ._element("NoTabFocus", Qt::NoTabFocus)
        ._element("TabFocusTextControls", Qt::TabFocusTextControls)
        ._element("TabFocusListControls", Qt::TabFocusListControls)
        ._element("TabFocusAllControls", Qt::TabFocusAllControls)
    ;
    _d.CPGF_MD_TEMPLATE _enum<SortOrder>("SortOrder")
        ._element("AscendingOrder", Qt::AscendingOrder)
        ._element("DescendingOrder", Qt::DescendingOrder)
    ;
    _d.CPGF_MD_TEMPLATE _enum<TileRule>("TileRule")
        ._element("StretchTile", Qt::StretchTile)
        ._element("RepeatTile", Qt::RepeatTile)
        ._element("RoundTile", Qt::RoundTile)
    ;
    _d.CPGF_MD_TEMPLATE _enum<AlignmentFlag>("AlignmentFlag")
        ._element("AlignLeft", Qt::AlignLeft)
        ._element("AlignLeading", Qt::AlignLeading)
        ._element("AlignRight", Qt::AlignRight)
        ._element("AlignTrailing", Qt::AlignTrailing)
        ._element("AlignHCenter", Qt::AlignHCenter)
        ._element("AlignJustify", Qt::AlignJustify)
        ._element("AlignAbsolute", Qt::AlignAbsolute)
        ._element("AlignHorizontal_Mask", Qt::AlignHorizontal_Mask)
        ._element("AlignTop", Qt::AlignTop)
        ._element("AlignBottom", Qt::AlignBottom)
        ._element("AlignVCenter", Qt::AlignVCenter)
        ._element("AlignBaseline", Qt::AlignBaseline)
        ._element("AlignVertical_Mask", Qt::AlignVertical_Mask)
        ._element("AlignCenter", Qt::AlignCenter)
    ;
    _d.CPGF_MD_TEMPLATE _enum<TextFlag>("TextFlag")
        ._element("TextSingleLine", Qt::TextSingleLine)
        ._element("TextDontClip", Qt::TextDontClip)
        ._element("TextExpandTabs", Qt::TextExpandTabs)
        ._element("TextShowMnemonic", Qt::TextShowMnemonic)
        ._element("TextWordWrap", Qt::TextWordWrap)
        ._element("TextWrapAnywhere", Qt::TextWrapAnywhere)
        ._element("TextDontPrint", Qt::TextDontPrint)
        ._element("TextIncludeTrailingSpaces", Qt::TextIncludeTrailingSpaces)
        ._element("TextHideMnemonic", Qt::TextHideMnemonic)
        ._element("TextJustificationForced", Qt::TextJustificationForced)
        ._element("TextForceLeftToRight", Qt::TextForceLeftToRight)
        ._element("TextForceRightToLeft", Qt::TextForceRightToLeft)
        ._element("TextLongestVariant", Qt::TextLongestVariant)
        ._element("TextBypassShaping", Qt::TextBypassShaping)
    ;
    _d.CPGF_MD_TEMPLATE _enum<TextElideMode>("TextElideMode")
        ._element("ElideLeft", Qt::ElideLeft)
        ._element("ElideRight", Qt::ElideRight)
        ._element("ElideMiddle", Qt::ElideMiddle)
        ._element("ElideNone", Qt::ElideNone)
    ;
    _d.CPGF_MD_TEMPLATE _enum<WhiteSpaceMode>("WhiteSpaceMode")
        ._element("WhiteSpaceNormal", Qt::WhiteSpaceNormal)
        ._element("WhiteSpacePre", Qt::WhiteSpacePre)
        ._element("WhiteSpaceNoWrap", Qt::WhiteSpaceNoWrap)
        ._element("WhiteSpaceModeUndefined", Qt::WhiteSpaceModeUndefined)
    ;
    _d.CPGF_MD_TEMPLATE _enum<HitTestAccuracy>("HitTestAccuracy")
        ._element("ExactHit", Qt::ExactHit)
        ._element("FuzzyHit", Qt::FuzzyHit)
    ;
    _d.CPGF_MD_TEMPLATE _enum<WindowType>("WindowType")
        ._element("Widget", Qt::Widget)
        ._element("Window", Qt::Window)
        ._element("Dialog", Qt::Dialog)
        ._element("Sheet", Qt::Sheet)
        ._element("Drawer", Qt::Drawer)
        ._element("Popup", Qt::Popup)
        ._element("Tool", Qt::Tool)
        ._element("ToolTip", Qt::ToolTip)
        ._element("SplashScreen", Qt::SplashScreen)
        ._element("Desktop", Qt::Desktop)
        ._element("SubWindow", Qt::SubWindow)
        ._element("ForeignWindow", Qt::ForeignWindow)
        ._element("CoverWindow", Qt::CoverWindow)
        ._element("WindowType_Mask", Qt::WindowType_Mask)
        ._element("MSWindowsFixedSizeDialogHint", Qt::MSWindowsFixedSizeDialogHint)
        ._element("MSWindowsOwnDC", Qt::MSWindowsOwnDC)
        ._element("BypassWindowManagerHint", Qt::BypassWindowManagerHint)
        ._element("X11BypassWindowManagerHint", Qt::X11BypassWindowManagerHint)
        ._element("FramelessWindowHint", Qt::FramelessWindowHint)
        ._element("WindowTitleHint", Qt::WindowTitleHint)
        ._element("WindowSystemMenuHint", Qt::WindowSystemMenuHint)
        ._element("WindowMinimizeButtonHint", Qt::WindowMinimizeButtonHint)
        ._element("WindowMaximizeButtonHint", Qt::WindowMaximizeButtonHint)
        ._element("WindowMinMaxButtonsHint", Qt::WindowMinMaxButtonsHint)
        ._element("WindowContextHelpButtonHint", Qt::WindowContextHelpButtonHint)
        ._element("WindowShadeButtonHint", Qt::WindowShadeButtonHint)
        ._element("WindowStaysOnTopHint", Qt::WindowStaysOnTopHint)
        ._element("WindowTransparentForInput", Qt::WindowTransparentForInput)
        ._element("WindowOverridesSystemGestures", Qt::WindowOverridesSystemGestures)
        ._element("WindowDoesNotAcceptFocus", Qt::WindowDoesNotAcceptFocus)
        ._element("MaximizeUsingFullscreenGeometryHint", Qt::MaximizeUsingFullscreenGeometryHint)
        ._element("CustomizeWindowHint", Qt::CustomizeWindowHint)
        ._element("WindowStaysOnBottomHint", Qt::WindowStaysOnBottomHint)
        ._element("WindowCloseButtonHint", Qt::WindowCloseButtonHint)
        ._element("MacWindowToolBarButtonHint", Qt::MacWindowToolBarButtonHint)
        ._element("BypassGraphicsProxyWidget", Qt::BypassGraphicsProxyWidget)
        ._element("NoDropShadowWindowHint", Qt::NoDropShadowWindowHint)
        ._element("WindowFullscreenButtonHint", Qt::WindowFullscreenButtonHint)
        ._element("WindowOkButtonHint", Qt::WindowOkButtonHint)
        ._element("WindowCancelButtonHint", Qt::WindowCancelButtonHint)
    ;
    _d.CPGF_MD_TEMPLATE _enum<WindowState>("WindowState")
        ._element("WindowNoState", Qt::WindowNoState)
        ._element("WindowMinimized", Qt::WindowMinimized)
        ._element("WindowMaximized", Qt::WindowMaximized)
        ._element("WindowFullScreen", Qt::WindowFullScreen)
        ._element("WindowActive", Qt::WindowActive)
    ;
    _d.CPGF_MD_TEMPLATE _enum<ApplicationState>("ApplicationState")
        ._element("ApplicationSuspended", Qt::ApplicationSuspended)
        ._element("ApplicationHidden", Qt::ApplicationHidden)
        ._element("ApplicationInactive", Qt::ApplicationInactive)
        ._element("ApplicationActive", Qt::ApplicationActive)
    ;
    _d.CPGF_MD_TEMPLATE _enum<ScreenOrientation>("ScreenOrientation")
        ._element("PrimaryOrientation", Qt::PrimaryOrientation)
        ._element("PortraitOrientation", Qt::PortraitOrientation)
        ._element("LandscapeOrientation", Qt::LandscapeOrientation)
        ._element("InvertedPortraitOrientation", Qt::InvertedPortraitOrientation)
        ._element("InvertedLandscapeOrientation", Qt::InvertedLandscapeOrientation)
    ;
    _d.CPGF_MD_TEMPLATE _enum<WidgetAttribute>("WidgetAttribute")
        ._element("WA_Disabled", Qt::WA_Disabled)
        ._element("WA_UnderMouse", Qt::WA_UnderMouse)
        ._element("WA_MouseTracking", Qt::WA_MouseTracking)
        ._element("WA_ContentsPropagated", Qt::WA_ContentsPropagated)
        ._element("WA_OpaquePaintEvent", Qt::WA_OpaquePaintEvent)
        ._element("WA_NoBackground", Qt::WA_NoBackground)
        ._element("WA_StaticContents", Qt::WA_StaticContents)
        ._element("WA_LaidOut", Qt::WA_LaidOut)
        ._element("WA_PaintOnScreen", Qt::WA_PaintOnScreen)
        ._element("WA_NoSystemBackground", Qt::WA_NoSystemBackground)
        ._element("WA_UpdatesDisabled", Qt::WA_UpdatesDisabled)
        ._element("WA_Mapped", Qt::WA_Mapped)
        ._element("WA_MacNoClickThrough", Qt::WA_MacNoClickThrough)
        ._element("WA_InputMethodEnabled", Qt::WA_InputMethodEnabled)
        ._element("WA_WState_Visible", Qt::WA_WState_Visible)
        ._element("WA_WState_Hidden", Qt::WA_WState_Hidden)
        ._element("WA_ForceDisabled", Qt::WA_ForceDisabled)
        ._element("WA_KeyCompression", Qt::WA_KeyCompression)
        ._element("WA_PendingMoveEvent", Qt::WA_PendingMoveEvent)
        ._element("WA_PendingResizeEvent", Qt::WA_PendingResizeEvent)
        ._element("WA_SetPalette", Qt::WA_SetPalette)
        ._element("WA_SetFont", Qt::WA_SetFont)
        ._element("WA_SetCursor", Qt::WA_SetCursor)
        ._element("WA_NoChildEventsFromChildren", Qt::WA_NoChildEventsFromChildren)
        ._element("WA_WindowModified", Qt::WA_WindowModified)
        ._element("WA_Resized", Qt::WA_Resized)
        ._element("WA_Moved", Qt::WA_Moved)
        ._element("WA_PendingUpdate", Qt::WA_PendingUpdate)
        ._element("WA_InvalidSize", Qt::WA_InvalidSize)
        ._element("WA_MacBrushedMetal", Qt::WA_MacBrushedMetal)
        ._element("WA_MacMetalStyle", Qt::WA_MacMetalStyle)
        ._element("WA_CustomWhatsThis", Qt::WA_CustomWhatsThis)
        ._element("WA_LayoutOnEntireRect", Qt::WA_LayoutOnEntireRect)
        ._element("WA_OutsideWSRange", Qt::WA_OutsideWSRange)
        ._element("WA_GrabbedShortcut", Qt::WA_GrabbedShortcut)
        ._element("WA_TransparentForMouseEvents", Qt::WA_TransparentForMouseEvents)
        ._element("WA_PaintUnclipped", Qt::WA_PaintUnclipped)
        ._element("WA_SetWindowIcon", Qt::WA_SetWindowIcon)
        ._element("WA_NoMouseReplay", Qt::WA_NoMouseReplay)
        ._element("WA_DeleteOnClose", Qt::WA_DeleteOnClose)
        ._element("WA_RightToLeft", Qt::WA_RightToLeft)
        ._element("WA_SetLayoutDirection", Qt::WA_SetLayoutDirection)
        ._element("WA_NoChildEventsForParent", Qt::WA_NoChildEventsForParent)
        ._element("WA_ForceUpdatesDisabled", Qt::WA_ForceUpdatesDisabled)
        ._element("WA_WState_Created", Qt::WA_WState_Created)
        ._element("WA_WState_CompressKeys", Qt::WA_WState_CompressKeys)
        ._element("WA_WState_InPaintEvent", Qt::WA_WState_InPaintEvent)
        ._element("WA_WState_Reparented", Qt::WA_WState_Reparented)
        ._element("WA_WState_ConfigPending", Qt::WA_WState_ConfigPending)
        ._element("WA_WState_Polished", Qt::WA_WState_Polished)
        ._element("WA_WState_DND", Qt::WA_WState_DND)
        ._element("WA_WState_OwnSizePolicy", Qt::WA_WState_OwnSizePolicy)
        ._element("WA_WState_ExplicitShowHide", Qt::WA_WState_ExplicitShowHide)
        ._element("WA_ShowModal", Qt::WA_ShowModal)
        ._element("WA_MouseNoMask", Qt::WA_MouseNoMask)
        ._element("WA_GroupLeader", Qt::WA_GroupLeader)
        ._element("WA_NoMousePropagation", Qt::WA_NoMousePropagation)
        ._element("WA_Hover", Qt::WA_Hover)
        ._element("WA_InputMethodTransparent", Qt::WA_InputMethodTransparent)
        ._element("WA_QuitOnClose", Qt::WA_QuitOnClose)
        ._element("WA_KeyboardFocusChange", Qt::WA_KeyboardFocusChange)
        ._element("WA_AcceptDrops", Qt::WA_AcceptDrops)
        ._element("WA_DropSiteRegistered", Qt::WA_DropSiteRegistered)
        ._element("WA_ForceAcceptDrops", Qt::WA_ForceAcceptDrops)
        ._element("WA_WindowPropagation", Qt::WA_WindowPropagation)
        ._element("WA_NoX11EventCompression", Qt::WA_NoX11EventCompression)
        ._element("WA_TintedBackground", Qt::WA_TintedBackground)
        ._element("WA_X11OpenGLOverlay", Qt::WA_X11OpenGLOverlay)
        ._element("WA_AlwaysShowToolTips", Qt::WA_AlwaysShowToolTips)
        ._element("WA_MacOpaqueSizeGrip", Qt::WA_MacOpaqueSizeGrip)
        ._element("WA_SetStyle", Qt::WA_SetStyle)
        ._element("WA_SetLocale", Qt::WA_SetLocale)
        ._element("WA_MacShowFocusRect", Qt::WA_MacShowFocusRect)
        ._element("WA_MacNormalSize", Qt::WA_MacNormalSize)
        ._element("WA_MacSmallSize", Qt::WA_MacSmallSize)
        ._element("WA_MacMiniSize", Qt::WA_MacMiniSize)
        ._element("WA_LayoutUsesWidgetRect", Qt::WA_LayoutUsesWidgetRect)
        ._element("WA_StyledBackground", Qt::WA_StyledBackground)
        ._element("WA_MSWindowsUseDirect3D", Qt::WA_MSWindowsUseDirect3D)
        ._element("WA_CanHostQMdiSubWindowTitleBar", Qt::WA_CanHostQMdiSubWindowTitleBar)
        ._element("WA_MacAlwaysShowToolWindow", Qt::WA_MacAlwaysShowToolWindow)
        ._element("WA_StyleSheet", Qt::WA_StyleSheet)
        ._element("WA_ShowWithoutActivating", Qt::WA_ShowWithoutActivating)
        ._element("WA_X11BypassTransientForHint", Qt::WA_X11BypassTransientForHint)
        ._element("WA_NativeWindow", Qt::WA_NativeWindow)
        ._element("WA_DontCreateNativeAncestors", Qt::WA_DontCreateNativeAncestors)
        ._element("WA_MacVariableSize", Qt::WA_MacVariableSize)
        ._element("WA_DontShowOnScreen", Qt::WA_DontShowOnScreen)
        ._element("WA_X11NetWmWindowTypeDesktop", Qt::WA_X11NetWmWindowTypeDesktop)
        ._element("WA_X11NetWmWindowTypeDock", Qt::WA_X11NetWmWindowTypeDock)
        ._element("WA_X11NetWmWindowTypeToolBar", Qt::WA_X11NetWmWindowTypeToolBar)
        ._element("WA_X11NetWmWindowTypeMenu", Qt::WA_X11NetWmWindowTypeMenu)
        ._element("WA_X11NetWmWindowTypeUtility", Qt::WA_X11NetWmWindowTypeUtility)
        ._element("WA_X11NetWmWindowTypeSplash", Qt::WA_X11NetWmWindowTypeSplash)
        ._element("WA_X11NetWmWindowTypeDialog", Qt::WA_X11NetWmWindowTypeDialog)
        ._element("WA_X11NetWmWindowTypeDropDownMenu", Qt::WA_X11NetWmWindowTypeDropDownMenu)
        ._element("WA_X11NetWmWindowTypePopupMenu", Qt::WA_X11NetWmWindowTypePopupMenu)
        ._element("WA_X11NetWmWindowTypeToolTip", Qt::WA_X11NetWmWindowTypeToolTip)
        ._element("WA_X11NetWmWindowTypeNotification", Qt::WA_X11NetWmWindowTypeNotification)
        ._element("WA_X11NetWmWindowTypeCombo", Qt::WA_X11NetWmWindowTypeCombo)
        ._element("WA_X11NetWmWindowTypeDND", Qt::WA_X11NetWmWindowTypeDND)
        ._element("WA_MacFrameworkScaled", Qt::WA_MacFrameworkScaled)
        ._element("WA_SetWindowModality", Qt::WA_SetWindowModality)
        ._element("WA_WState_WindowOpacitySet", Qt::WA_WState_WindowOpacitySet)
        ._element("WA_TranslucentBackground", Qt::WA_TranslucentBackground)
        ._element("WA_AcceptTouchEvents", Qt::WA_AcceptTouchEvents)
        ._element("WA_WState_AcceptedTouchBeginEvent", Qt::WA_WState_AcceptedTouchBeginEvent)
        ._element("WA_TouchPadAcceptSingleTouchEvents", Qt::WA_TouchPadAcceptSingleTouchEvents)
        ._element("WA_X11DoNotAcceptFocus", Qt::WA_X11DoNotAcceptFocus)
        ._element("WA_MacNoShadow", Qt::WA_MacNoShadow)
        ._element("WA_AlwaysStackOnTop", Qt::WA_AlwaysStackOnTop)
        ._element("WA_AttributeCount", Qt::WA_AttributeCount)
    ;
    _d.CPGF_MD_TEMPLATE _enum<ApplicationAttribute>("ApplicationAttribute")
        ._element("AA_ImmediateWidgetCreation", Qt::AA_ImmediateWidgetCreation)
        ._element("AA_MSWindowsUseDirect3DByDefault", Qt::AA_MSWindowsUseDirect3DByDefault)
        ._element("AA_DontShowIconsInMenus", Qt::AA_DontShowIconsInMenus)
        ._element("AA_NativeWindows", Qt::AA_NativeWindows)
        ._element("AA_DontCreateNativeWidgetSiblings", Qt::AA_DontCreateNativeWidgetSiblings)
        ._element("AA_MacPluginApplication", Qt::AA_MacPluginApplication)
        ._element("AA_DontUseNativeMenuBar", Qt::AA_DontUseNativeMenuBar)
        ._element("AA_MacDontSwapCtrlAndMeta", Qt::AA_MacDontSwapCtrlAndMeta)
        ._element("AA_Use96Dpi", Qt::AA_Use96Dpi)
        ._element("AA_X11InitThreads", Qt::AA_X11InitThreads)
        ._element("AA_SynthesizeTouchForUnhandledMouseEvents", Qt::AA_SynthesizeTouchForUnhandledMouseEvents)
        ._element("AA_SynthesizeMouseForUnhandledTouchEvents", Qt::AA_SynthesizeMouseForUnhandledTouchEvents)
        ._element("AA_UseHighDpiPixmaps", Qt::AA_UseHighDpiPixmaps)
        ._element("AA_ForceRasterWidgets", Qt::AA_ForceRasterWidgets)
        ._element("AA_UseDesktopOpenGL", Qt::AA_UseDesktopOpenGL)
        ._element("AA_UseOpenGLES", Qt::AA_UseOpenGLES)
        ._element("AA_UseSoftwareOpenGL", Qt::AA_UseSoftwareOpenGL)
        ._element("AA_ShareOpenGLContexts", Qt::AA_ShareOpenGLContexts)
        ._element("AA_SetPalette", Qt::AA_SetPalette)
        ._element("AA_AttributeCount", Qt::AA_AttributeCount)
    ;
    _d.CPGF_MD_TEMPLATE _enum<ImageConversionFlag>("ImageConversionFlag")
        ._element("ColorMode_Mask", Qt::ColorMode_Mask)
        ._element("AutoColor", Qt::AutoColor)
        ._element("ColorOnly", Qt::ColorOnly)
        ._element("MonoOnly", Qt::MonoOnly)
        ._element("AlphaDither_Mask", Qt::AlphaDither_Mask)
        ._element("ThresholdAlphaDither", Qt::ThresholdAlphaDither)
        ._element("OrderedAlphaDither", Qt::OrderedAlphaDither)
        ._element("DiffuseAlphaDither", Qt::DiffuseAlphaDither)
        ._element("NoAlpha", Qt::NoAlpha)
        ._element("Dither_Mask", Qt::Dither_Mask)
        ._element("DiffuseDither", Qt::DiffuseDither)
        ._element("OrderedDither", Qt::OrderedDither)
        ._element("ThresholdDither", Qt::ThresholdDither)
        ._element("DitherMode_Mask", Qt::DitherMode_Mask)
        ._element("AutoDither", Qt::AutoDither)
        ._element("PreferDither", Qt::PreferDither)
        ._element("AvoidDither", Qt::AvoidDither)
        ._element("NoOpaqueDetection", Qt::NoOpaqueDetection)
        ._element("NoFormatConversion", Qt::NoFormatConversion)
    ;
    _d.CPGF_MD_TEMPLATE _enum<BGMode>("BGMode")
        ._element("TransparentMode", Qt::TransparentMode)
        ._element("OpaqueMode", Qt::OpaqueMode)
    ;
    _d.CPGF_MD_TEMPLATE _enum<Key>("Key")
        ._element("Key_Escape", Qt::Key_Escape)
        ._element("Key_Tab", Qt::Key_Tab)
        ._element("Key_Backtab", Qt::Key_Backtab)
        ._element("Key_Backspace", Qt::Key_Backspace)
        ._element("Key_Return", Qt::Key_Return)
        ._element("Key_Enter", Qt::Key_Enter)
        ._element("Key_Insert", Qt::Key_Insert)
        ._element("Key_Delete", Qt::Key_Delete)
        ._element("Key_Pause", Qt::Key_Pause)
        ._element("Key_Print", Qt::Key_Print)
        ._element("Key_SysReq", Qt::Key_SysReq)
        ._element("Key_Clear", Qt::Key_Clear)
        ._element("Key_Home", Qt::Key_Home)
        ._element("Key_End", Qt::Key_End)
        ._element("Key_Left", Qt::Key_Left)
        ._element("Key_Up", Qt::Key_Up)
        ._element("Key_Right", Qt::Key_Right)
        ._element("Key_Down", Qt::Key_Down)
        ._element("Key_PageUp", Qt::Key_PageUp)
        ._element("Key_PageDown", Qt::Key_PageDown)
        ._element("Key_Shift", Qt::Key_Shift)
        ._element("Key_Control", Qt::Key_Control)
        ._element("Key_Meta", Qt::Key_Meta)
        ._element("Key_Alt", Qt::Key_Alt)
        ._element("Key_CapsLock", Qt::Key_CapsLock)
        ._element("Key_NumLock", Qt::Key_NumLock)
        ._element("Key_ScrollLock", Qt::Key_ScrollLock)
        ._element("Key_F1", Qt::Key_F1)
        ._element("Key_F2", Qt::Key_F2)
        ._element("Key_F3", Qt::Key_F3)
        ._element("Key_F4", Qt::Key_F4)
        ._element("Key_F5", Qt::Key_F5)
        ._element("Key_F6", Qt::Key_F6)
        ._element("Key_F7", Qt::Key_F7)
        ._element("Key_F8", Qt::Key_F8)
        ._element("Key_F9", Qt::Key_F9)
        ._element("Key_F10", Qt::Key_F10)
        ._element("Key_F11", Qt::Key_F11)
        ._element("Key_F12", Qt::Key_F12)
        ._element("Key_F13", Qt::Key_F13)
        ._element("Key_F14", Qt::Key_F14)
        ._element("Key_F15", Qt::Key_F15)
        ._element("Key_F16", Qt::Key_F16)
        ._element("Key_F17", Qt::Key_F17)
        ._element("Key_F18", Qt::Key_F18)
        ._element("Key_F19", Qt::Key_F19)
        ._element("Key_F20", Qt::Key_F20)
        ._element("Key_F21", Qt::Key_F21)
        ._element("Key_F22", Qt::Key_F22)
        ._element("Key_F23", Qt::Key_F23)
        ._element("Key_F24", Qt::Key_F24)
        ._element("Key_F25", Qt::Key_F25)
        ._element("Key_F26", Qt::Key_F26)
        ._element("Key_F27", Qt::Key_F27)
        ._element("Key_F28", Qt::Key_F28)
        ._element("Key_F29", Qt::Key_F29)
        ._element("Key_F30", Qt::Key_F30)
        ._element("Key_F31", Qt::Key_F31)
        ._element("Key_F32", Qt::Key_F32)
        ._element("Key_F33", Qt::Key_F33)
        ._element("Key_F34", Qt::Key_F34)
        ._element("Key_F35", Qt::Key_F35)
        ._element("Key_Super_L", Qt::Key_Super_L)
        ._element("Key_Super_R", Qt::Key_Super_R)
        ._element("Key_Menu", Qt::Key_Menu)
        ._element("Key_Hyper_L", Qt::Key_Hyper_L)
        ._element("Key_Hyper_R", Qt::Key_Hyper_R)
        ._element("Key_Help", Qt::Key_Help)
        ._element("Key_Direction_L", Qt::Key_Direction_L)
        ._element("Key_Direction_R", Qt::Key_Direction_R)
        ._element("Key_Space", Qt::Key_Space)
        ._element("Key_Any", Qt::Key_Any)
        ._element("Key_Exclam", Qt::Key_Exclam)
        ._element("Key_QuoteDbl", Qt::Key_QuoteDbl)
        ._element("Key_NumberSign", Qt::Key_NumberSign)
        ._element("Key_Dollar", Qt::Key_Dollar)
        ._element("Key_Percent", Qt::Key_Percent)
        ._element("Key_Ampersand", Qt::Key_Ampersand)
        ._element("Key_Apostrophe", Qt::Key_Apostrophe)
        ._element("Key_ParenLeft", Qt::Key_ParenLeft)
        ._element("Key_ParenRight", Qt::Key_ParenRight)
        ._element("Key_Asterisk", Qt::Key_Asterisk)
        ._element("Key_Plus", Qt::Key_Plus)
        ._element("Key_Comma", Qt::Key_Comma)
        ._element("Key_Minus", Qt::Key_Minus)
        ._element("Key_Period", Qt::Key_Period)
        ._element("Key_Slash", Qt::Key_Slash)
        ._element("Key_0", Qt::Key_0)
        ._element("Key_1", Qt::Key_1)
        ._element("Key_2", Qt::Key_2)
        ._element("Key_3", Qt::Key_3)
        ._element("Key_4", Qt::Key_4)
        ._element("Key_5", Qt::Key_5)
        ._element("Key_6", Qt::Key_6)
        ._element("Key_7", Qt::Key_7)
        ._element("Key_8", Qt::Key_8)
        ._element("Key_9", Qt::Key_9)
        ._element("Key_Colon", Qt::Key_Colon)
        ._element("Key_Semicolon", Qt::Key_Semicolon)
        ._element("Key_Less", Qt::Key_Less)
        ._element("Key_Equal", Qt::Key_Equal)
        ._element("Key_Greater", Qt::Key_Greater)
        ._element("Key_Question", Qt::Key_Question)
        ._element("Key_At", Qt::Key_At)
        ._element("Key_A", Qt::Key_A)
        ._element("Key_B", Qt::Key_B)
        ._element("Key_C", Qt::Key_C)
        ._element("Key_D", Qt::Key_D)
        ._element("Key_E", Qt::Key_E)
        ._element("Key_F", Qt::Key_F)
        ._element("Key_G", Qt::Key_G)
        ._element("Key_H", Qt::Key_H)
        ._element("Key_I", Qt::Key_I)
        ._element("Key_J", Qt::Key_J)
        ._element("Key_K", Qt::Key_K)
        ._element("Key_L", Qt::Key_L)
        ._element("Key_M", Qt::Key_M)
        ._element("Key_N", Qt::Key_N)
        ._element("Key_O", Qt::Key_O)
        ._element("Key_P", Qt::Key_P)
        ._element("Key_Q", Qt::Key_Q)
        ._element("Key_R", Qt::Key_R)
        ._element("Key_S", Qt::Key_S)
        ._element("Key_T", Qt::Key_T)
        ._element("Key_U", Qt::Key_U)
        ._element("Key_V", Qt::Key_V)
        ._element("Key_W", Qt::Key_W)
        ._element("Key_X", Qt::Key_X)
        ._element("Key_Y", Qt::Key_Y)
        ._element("Key_Z", Qt::Key_Z)
        ._element("Key_BracketLeft", Qt::Key_BracketLeft)
        ._element("Key_Backslash", Qt::Key_Backslash)
        ._element("Key_BracketRight", Qt::Key_BracketRight)
        ._element("Key_AsciiCircum", Qt::Key_AsciiCircum)
        ._element("Key_Underscore", Qt::Key_Underscore)
        ._element("Key_QuoteLeft", Qt::Key_QuoteLeft)
        ._element("Key_BraceLeft", Qt::Key_BraceLeft)
        ._element("Key_Bar", Qt::Key_Bar)
        ._element("Key_BraceRight", Qt::Key_BraceRight)
        ._element("Key_AsciiTilde", Qt::Key_AsciiTilde)
        ._element("Key_nobreakspace", Qt::Key_nobreakspace)
        ._element("Key_exclamdown", Qt::Key_exclamdown)
        ._element("Key_cent", Qt::Key_cent)
        ._element("Key_sterling", Qt::Key_sterling)
        ._element("Key_currency", Qt::Key_currency)
        ._element("Key_yen", Qt::Key_yen)
        ._element("Key_brokenbar", Qt::Key_brokenbar)
        ._element("Key_section", Qt::Key_section)
        ._element("Key_diaeresis", Qt::Key_diaeresis)
        ._element("Key_copyright", Qt::Key_copyright)
        ._element("Key_ordfeminine", Qt::Key_ordfeminine)
        ._element("Key_guillemotleft", Qt::Key_guillemotleft)
        ._element("Key_notsign", Qt::Key_notsign)
        ._element("Key_hyphen", Qt::Key_hyphen)
        ._element("Key_registered", Qt::Key_registered)
        ._element("Key_macron", Qt::Key_macron)
        ._element("Key_degree", Qt::Key_degree)
        ._element("Key_plusminus", Qt::Key_plusminus)
        ._element("Key_twosuperior", Qt::Key_twosuperior)
        ._element("Key_threesuperior", Qt::Key_threesuperior)
        ._element("Key_acute", Qt::Key_acute)
        ._element("Key_mu", Qt::Key_mu)
        ._element("Key_paragraph", Qt::Key_paragraph)
        ._element("Key_periodcentered", Qt::Key_periodcentered)
        ._element("Key_cedilla", Qt::Key_cedilla)
        ._element("Key_onesuperior", Qt::Key_onesuperior)
        ._element("Key_masculine", Qt::Key_masculine)
        ._element("Key_guillemotright", Qt::Key_guillemotright)
        ._element("Key_onequarter", Qt::Key_onequarter)
        ._element("Key_onehalf", Qt::Key_onehalf)
        ._element("Key_threequarters", Qt::Key_threequarters)
        ._element("Key_questiondown", Qt::Key_questiondown)
        ._element("Key_Agrave", Qt::Key_Agrave)
        ._element("Key_Aacute", Qt::Key_Aacute)
        ._element("Key_Acircumflex", Qt::Key_Acircumflex)
        ._element("Key_Atilde", Qt::Key_Atilde)
        ._element("Key_Adiaeresis", Qt::Key_Adiaeresis)
        ._element("Key_Aring", Qt::Key_Aring)
        ._element("Key_AE", Qt::Key_AE)
        ._element("Key_Ccedilla", Qt::Key_Ccedilla)
        ._element("Key_Egrave", Qt::Key_Egrave)
        ._element("Key_Eacute", Qt::Key_Eacute)
        ._element("Key_Ecircumflex", Qt::Key_Ecircumflex)
        ._element("Key_Ediaeresis", Qt::Key_Ediaeresis)
        ._element("Key_Igrave", Qt::Key_Igrave)
        ._element("Key_Iacute", Qt::Key_Iacute)
        ._element("Key_Icircumflex", Qt::Key_Icircumflex)
        ._element("Key_Idiaeresis", Qt::Key_Idiaeresis)
        ._element("Key_ETH", Qt::Key_ETH)
        ._element("Key_Ntilde", Qt::Key_Ntilde)
        ._element("Key_Ograve", Qt::Key_Ograve)
        ._element("Key_Oacute", Qt::Key_Oacute)
        ._element("Key_Ocircumflex", Qt::Key_Ocircumflex)
        ._element("Key_Otilde", Qt::Key_Otilde)
        ._element("Key_Odiaeresis", Qt::Key_Odiaeresis)
        ._element("Key_multiply", Qt::Key_multiply)
        ._element("Key_Ooblique", Qt::Key_Ooblique)
        ._element("Key_Ugrave", Qt::Key_Ugrave)
        ._element("Key_Uacute", Qt::Key_Uacute)
        ._element("Key_Ucircumflex", Qt::Key_Ucircumflex)
        ._element("Key_Udiaeresis", Qt::Key_Udiaeresis)
        ._element("Key_Yacute", Qt::Key_Yacute)
        ._element("Key_THORN", Qt::Key_THORN)
        ._element("Key_ssharp", Qt::Key_ssharp)
        ._element("Key_division", Qt::Key_division)
        ._element("Key_ydiaeresis", Qt::Key_ydiaeresis)
        ._element("Key_AltGr", Qt::Key_AltGr)
        ._element("Key_Multi_key", Qt::Key_Multi_key)
        ._element("Key_Codeinput", Qt::Key_Codeinput)
        ._element("Key_SingleCandidate", Qt::Key_SingleCandidate)
        ._element("Key_MultipleCandidate", Qt::Key_MultipleCandidate)
        ._element("Key_PreviousCandidate", Qt::Key_PreviousCandidate)
        ._element("Key_Mode_switch", Qt::Key_Mode_switch)
        ._element("Key_Kanji", Qt::Key_Kanji)
        ._element("Key_Muhenkan", Qt::Key_Muhenkan)
        ._element("Key_Henkan", Qt::Key_Henkan)
        ._element("Key_Romaji", Qt::Key_Romaji)
        ._element("Key_Hiragana", Qt::Key_Hiragana)
        ._element("Key_Katakana", Qt::Key_Katakana)
        ._element("Key_Hiragana_Katakana", Qt::Key_Hiragana_Katakana)
        ._element("Key_Zenkaku", Qt::Key_Zenkaku)
        ._element("Key_Hankaku", Qt::Key_Hankaku)
        ._element("Key_Zenkaku_Hankaku", Qt::Key_Zenkaku_Hankaku)
        ._element("Key_Touroku", Qt::Key_Touroku)
        ._element("Key_Massyo", Qt::Key_Massyo)
        ._element("Key_Kana_Lock", Qt::Key_Kana_Lock)
        ._element("Key_Kana_Shift", Qt::Key_Kana_Shift)
        ._element("Key_Eisu_Shift", Qt::Key_Eisu_Shift)
        ._element("Key_Eisu_toggle", Qt::Key_Eisu_toggle)
        ._element("Key_Hangul", Qt::Key_Hangul)
        ._element("Key_Hangul_Start", Qt::Key_Hangul_Start)
        ._element("Key_Hangul_End", Qt::Key_Hangul_End)
        ._element("Key_Hangul_Hanja", Qt::Key_Hangul_Hanja)
        ._element("Key_Hangul_Jamo", Qt::Key_Hangul_Jamo)
        ._element("Key_Hangul_Romaja", Qt::Key_Hangul_Romaja)
        ._element("Key_Hangul_Jeonja", Qt::Key_Hangul_Jeonja)
        ._element("Key_Hangul_Banja", Qt::Key_Hangul_Banja)
        ._element("Key_Hangul_PreHanja", Qt::Key_Hangul_PreHanja)
        ._element("Key_Hangul_PostHanja", Qt::Key_Hangul_PostHanja)
        ._element("Key_Hangul_Special", Qt::Key_Hangul_Special)
        ._element("Key_Dead_Grave", Qt::Key_Dead_Grave)
        ._element("Key_Dead_Acute", Qt::Key_Dead_Acute)
        ._element("Key_Dead_Circumflex", Qt::Key_Dead_Circumflex)
        ._element("Key_Dead_Tilde", Qt::Key_Dead_Tilde)
        ._element("Key_Dead_Macron", Qt::Key_Dead_Macron)
        ._element("Key_Dead_Breve", Qt::Key_Dead_Breve)
        ._element("Key_Dead_Abovedot", Qt::Key_Dead_Abovedot)
        ._element("Key_Dead_Diaeresis", Qt::Key_Dead_Diaeresis)
        ._element("Key_Dead_Abovering", Qt::Key_Dead_Abovering)
        ._element("Key_Dead_Doubleacute", Qt::Key_Dead_Doubleacute)
        ._element("Key_Dead_Caron", Qt::Key_Dead_Caron)
        ._element("Key_Dead_Cedilla", Qt::Key_Dead_Cedilla)
        ._element("Key_Dead_Ogonek", Qt::Key_Dead_Ogonek)
        ._element("Key_Dead_Iota", Qt::Key_Dead_Iota)
        ._element("Key_Dead_Voiced_Sound", Qt::Key_Dead_Voiced_Sound)
        ._element("Key_Dead_Semivoiced_Sound", Qt::Key_Dead_Semivoiced_Sound)
        ._element("Key_Dead_Belowdot", Qt::Key_Dead_Belowdot)
        ._element("Key_Dead_Hook", Qt::Key_Dead_Hook)
        ._element("Key_Dead_Horn", Qt::Key_Dead_Horn)
        ._element("Key_Back", Qt::Key_Back)
        ._element("Key_Forward", Qt::Key_Forward)
        ._element("Key_Stop", Qt::Key_Stop)
        ._element("Key_Refresh", Qt::Key_Refresh)
        ._element("Key_VolumeDown", Qt::Key_VolumeDown)
        ._element("Key_VolumeMute", Qt::Key_VolumeMute)
        ._element("Key_VolumeUp", Qt::Key_VolumeUp)
        ._element("Key_BassBoost", Qt::Key_BassBoost)
        ._element("Key_BassUp", Qt::Key_BassUp)
        ._element("Key_BassDown", Qt::Key_BassDown)
        ._element("Key_TrebleUp", Qt::Key_TrebleUp)
        ._element("Key_TrebleDown", Qt::Key_TrebleDown)
        ._element("Key_MediaPlay", Qt::Key_MediaPlay)
        ._element("Key_MediaStop", Qt::Key_MediaStop)
        ._element("Key_MediaPrevious", Qt::Key_MediaPrevious)
        ._element("Key_MediaNext", Qt::Key_MediaNext)
        ._element("Key_MediaRecord", Qt::Key_MediaRecord)
        ._element("Key_MediaPause", Qt::Key_MediaPause)
        ._element("Key_MediaTogglePlayPause", Qt::Key_MediaTogglePlayPause)
        ._element("Key_HomePage", Qt::Key_HomePage)
        ._element("Key_Favorites", Qt::Key_Favorites)
        ._element("Key_Search", Qt::Key_Search)
        ._element("Key_Standby", Qt::Key_Standby)
        ._element("Key_OpenUrl", Qt::Key_OpenUrl)
        ._element("Key_LaunchMail", Qt::Key_LaunchMail)
        ._element("Key_LaunchMedia", Qt::Key_LaunchMedia)
        ._element("Key_Launch0", Qt::Key_Launch0)
        ._element("Key_Launch1", Qt::Key_Launch1)
        ._element("Key_Launch2", Qt::Key_Launch2)
        ._element("Key_Launch3", Qt::Key_Launch3)
        ._element("Key_Launch4", Qt::Key_Launch4)
        ._element("Key_Launch5", Qt::Key_Launch5)
        ._element("Key_Launch6", Qt::Key_Launch6)
        ._element("Key_Launch7", Qt::Key_Launch7)
        ._element("Key_Launch8", Qt::Key_Launch8)
        ._element("Key_Launch9", Qt::Key_Launch9)
        ._element("Key_LaunchA", Qt::Key_LaunchA)
        ._element("Key_LaunchB", Qt::Key_LaunchB)
        ._element("Key_LaunchC", Qt::Key_LaunchC)
        ._element("Key_LaunchD", Qt::Key_LaunchD)
        ._element("Key_LaunchE", Qt::Key_LaunchE)
        ._element("Key_LaunchF", Qt::Key_LaunchF)
        ._element("Key_MonBrightnessUp", Qt::Key_MonBrightnessUp)
        ._element("Key_MonBrightnessDown", Qt::Key_MonBrightnessDown)
        ._element("Key_KeyboardLightOnOff", Qt::Key_KeyboardLightOnOff)
        ._element("Key_KeyboardBrightnessUp", Qt::Key_KeyboardBrightnessUp)
        ._element("Key_KeyboardBrightnessDown", Qt::Key_KeyboardBrightnessDown)
        ._element("Key_PowerOff", Qt::Key_PowerOff)
        ._element("Key_WakeUp", Qt::Key_WakeUp)
        ._element("Key_Eject", Qt::Key_Eject)
        ._element("Key_ScreenSaver", Qt::Key_ScreenSaver)
        ._element("Key_WWW", Qt::Key_WWW)
        ._element("Key_Memo", Qt::Key_Memo)
        ._element("Key_LightBulb", Qt::Key_LightBulb)
        ._element("Key_Shop", Qt::Key_Shop)
        ._element("Key_History", Qt::Key_History)
        ._element("Key_AddFavorite", Qt::Key_AddFavorite)
        ._element("Key_HotLinks", Qt::Key_HotLinks)
        ._element("Key_BrightnessAdjust", Qt::Key_BrightnessAdjust)
        ._element("Key_Finance", Qt::Key_Finance)
        ._element("Key_Community", Qt::Key_Community)
        ._element("Key_AudioRewind", Qt::Key_AudioRewind)
        ._element("Key_BackForward", Qt::Key_BackForward)
        ._element("Key_ApplicationLeft", Qt::Key_ApplicationLeft)
        ._element("Key_ApplicationRight", Qt::Key_ApplicationRight)
        ._element("Key_Book", Qt::Key_Book)
        ._element("Key_CD", Qt::Key_CD)
        ._element("Key_Calculator", Qt::Key_Calculator)
        ._element("Key_ToDoList", Qt::Key_ToDoList)
        ._element("Key_ClearGrab", Qt::Key_ClearGrab)
        ._element("Key_Close", Qt::Key_Close)
        ._element("Key_Copy", Qt::Key_Copy)
        ._element("Key_Cut", Qt::Key_Cut)
        ._element("Key_Display", Qt::Key_Display)
        ._element("Key_DOS", Qt::Key_DOS)
        ._element("Key_Documents", Qt::Key_Documents)
        ._element("Key_Excel", Qt::Key_Excel)
        ._element("Key_Explorer", Qt::Key_Explorer)
        ._element("Key_Game", Qt::Key_Game)
        ._element("Key_Go", Qt::Key_Go)
        ._element("Key_iTouch", Qt::Key_iTouch)
        ._element("Key_LogOff", Qt::Key_LogOff)
        ._element("Key_Market", Qt::Key_Market)
        ._element("Key_Meeting", Qt::Key_Meeting)
        ._element("Key_MenuKB", Qt::Key_MenuKB)
        ._element("Key_MenuPB", Qt::Key_MenuPB)
        ._element("Key_MySites", Qt::Key_MySites)
        ._element("Key_News", Qt::Key_News)
        ._element("Key_OfficeHome", Qt::Key_OfficeHome)
        ._element("Key_Option", Qt::Key_Option)
        ._element("Key_Paste", Qt::Key_Paste)
        ._element("Key_Phone", Qt::Key_Phone)
        ._element("Key_Calendar", Qt::Key_Calendar)
        ._element("Key_Reply", Qt::Key_Reply)
        ._element("Key_Reload", Qt::Key_Reload)
        ._element("Key_RotateWindows", Qt::Key_RotateWindows)
        ._element("Key_RotationPB", Qt::Key_RotationPB)
        ._element("Key_RotationKB", Qt::Key_RotationKB)
        ._element("Key_Save", Qt::Key_Save)
        ._element("Key_Send", Qt::Key_Send)
        ._element("Key_Spell", Qt::Key_Spell)
        ._element("Key_SplitScreen", Qt::Key_SplitScreen)
        ._element("Key_Support", Qt::Key_Support)
        ._element("Key_TaskPane", Qt::Key_TaskPane)
        ._element("Key_Terminal", Qt::Key_Terminal)
        ._element("Key_Tools", Qt::Key_Tools)
        ._element("Key_Travel", Qt::Key_Travel)
        ._element("Key_Video", Qt::Key_Video)
        ._element("Key_Word", Qt::Key_Word)
        ._element("Key_Xfer", Qt::Key_Xfer)
        ._element("Key_ZoomIn", Qt::Key_ZoomIn)
        ._element("Key_ZoomOut", Qt::Key_ZoomOut)
        ._element("Key_Away", Qt::Key_Away)
        ._element("Key_Messenger", Qt::Key_Messenger)
        ._element("Key_WebCam", Qt::Key_WebCam)
        ._element("Key_MailForward", Qt::Key_MailForward)
        ._element("Key_Pictures", Qt::Key_Pictures)
        ._element("Key_Music", Qt::Key_Music)
        ._element("Key_Battery", Qt::Key_Battery)
        ._element("Key_Bluetooth", Qt::Key_Bluetooth)
        ._element("Key_WLAN", Qt::Key_WLAN)
        ._element("Key_UWB", Qt::Key_UWB)
        ._element("Key_AudioForward", Qt::Key_AudioForward)
        ._element("Key_AudioRepeat", Qt::Key_AudioRepeat)
        ._element("Key_AudioRandomPlay", Qt::Key_AudioRandomPlay)
        ._element("Key_Subtitle", Qt::Key_Subtitle)
        ._element("Key_AudioCycleTrack", Qt::Key_AudioCycleTrack)
        ._element("Key_Time", Qt::Key_Time)
        ._element("Key_Hibernate", Qt::Key_Hibernate)
        ._element("Key_View", Qt::Key_View)
        ._element("Key_TopMenu", Qt::Key_TopMenu)
        ._element("Key_PowerDown", Qt::Key_PowerDown)
        ._element("Key_Suspend", Qt::Key_Suspend)
        ._element("Key_ContrastAdjust", Qt::Key_ContrastAdjust)
        ._element("Key_LaunchG", Qt::Key_LaunchG)
        ._element("Key_LaunchH", Qt::Key_LaunchH)
        ._element("Key_TouchpadToggle", Qt::Key_TouchpadToggle)
        ._element("Key_TouchpadOn", Qt::Key_TouchpadOn)
        ._element("Key_TouchpadOff", Qt::Key_TouchpadOff)
        ._element("Key_MicMute", Qt::Key_MicMute)
        ._element("Key_Red", Qt::Key_Red)
        ._element("Key_Green", Qt::Key_Green)
        ._element("Key_Yellow", Qt::Key_Yellow)
        ._element("Key_Blue", Qt::Key_Blue)
        ._element("Key_ChannelUp", Qt::Key_ChannelUp)
        ._element("Key_ChannelDown", Qt::Key_ChannelDown)
        ._element("Key_Guide", Qt::Key_Guide)
        ._element("Key_Info", Qt::Key_Info)
        ._element("Key_Settings", Qt::Key_Settings)
        ._element("Key_MicVolumeUp", Qt::Key_MicVolumeUp)
        ._element("Key_MicVolumeDown", Qt::Key_MicVolumeDown)
        ._element("Key_New", Qt::Key_New)
        ._element("Key_Open", Qt::Key_Open)
        ._element("Key_Find", Qt::Key_Find)
        ._element("Key_Undo", Qt::Key_Undo)
        ._element("Key_Redo", Qt::Key_Redo)
        ._element("Key_MediaLast", Qt::Key_MediaLast)
        ._element("Key_Select", Qt::Key_Select)
        ._element("Key_Yes", Qt::Key_Yes)
        ._element("Key_No", Qt::Key_No)
        ._element("Key_Cancel", Qt::Key_Cancel)
        ._element("Key_Printer", Qt::Key_Printer)
        ._element("Key_Execute", Qt::Key_Execute)
        ._element("Key_Sleep", Qt::Key_Sleep)
        ._element("Key_Play", Qt::Key_Play)
        ._element("Key_Zoom", Qt::Key_Zoom)
        ._element("Key_Exit", Qt::Key_Exit)
        ._element("Key_Context1", Qt::Key_Context1)
        ._element("Key_Context2", Qt::Key_Context2)
        ._element("Key_Context3", Qt::Key_Context3)
        ._element("Key_Context4", Qt::Key_Context4)
        ._element("Key_Call", Qt::Key_Call)
        ._element("Key_Hangup", Qt::Key_Hangup)
        ._element("Key_Flip", Qt::Key_Flip)
        ._element("Key_ToggleCallHangup", Qt::Key_ToggleCallHangup)
        ._element("Key_VoiceDial", Qt::Key_VoiceDial)
        ._element("Key_LastNumberRedial", Qt::Key_LastNumberRedial)
        ._element("Key_Camera", Qt::Key_Camera)
        ._element("Key_CameraFocus", Qt::Key_CameraFocus)
        ._element("Key_unknown", Qt::Key_unknown)
    ;
    _d.CPGF_MD_TEMPLATE _enum<ArrowType>("ArrowType")
        ._element("NoArrow", Qt::NoArrow)
        ._element("UpArrow", Qt::UpArrow)
        ._element("DownArrow", Qt::DownArrow)
        ._element("LeftArrow", Qt::LeftArrow)
        ._element("RightArrow", Qt::RightArrow)
    ;
    _d.CPGF_MD_TEMPLATE _enum<PenStyle>("PenStyle")
        ._element("NoPen", Qt::NoPen)
        ._element("SolidLine", Qt::SolidLine)
        ._element("DashLine", Qt::DashLine)
        ._element("DotLine", Qt::DotLine)
        ._element("DashDotLine", Qt::DashDotLine)
        ._element("DashDotDotLine", Qt::DashDotDotLine)
        ._element("CustomDashLine", Qt::CustomDashLine)
        ._element("MPenStyle", Qt::MPenStyle)
    ;
    _d.CPGF_MD_TEMPLATE _enum<PenCapStyle>("PenCapStyle")
        ._element("FlatCap", Qt::FlatCap)
        ._element("SquareCap", Qt::SquareCap)
        ._element("RoundCap", Qt::RoundCap)
        ._element("MPenCapStyle", Qt::MPenCapStyle)
    ;
    _d.CPGF_MD_TEMPLATE _enum<PenJoinStyle>("PenJoinStyle")
        ._element("MiterJoin", Qt::MiterJoin)
        ._element("BevelJoin", Qt::BevelJoin)
        ._element("RoundJoin", Qt::RoundJoin)
        ._element("SvgMiterJoin", Qt::SvgMiterJoin)
        ._element("MPenJoinStyle", Qt::MPenJoinStyle)
    ;
    _d.CPGF_MD_TEMPLATE _enum<BrushStyle>("BrushStyle")
        ._element("NoBrush", Qt::NoBrush)
        ._element("SolidPattern", Qt::SolidPattern)
        ._element("Dense1Pattern", Qt::Dense1Pattern)
        ._element("Dense2Pattern", Qt::Dense2Pattern)
        ._element("Dense3Pattern", Qt::Dense3Pattern)
        ._element("Dense4Pattern", Qt::Dense4Pattern)
        ._element("Dense5Pattern", Qt::Dense5Pattern)
        ._element("Dense6Pattern", Qt::Dense6Pattern)
        ._element("Dense7Pattern", Qt::Dense7Pattern)
        ._element("HorPattern", Qt::HorPattern)
        ._element("VerPattern", Qt::VerPattern)
        ._element("CrossPattern", Qt::CrossPattern)
        ._element("BDiagPattern", Qt::BDiagPattern)
        ._element("FDiagPattern", Qt::FDiagPattern)
        ._element("DiagCrossPattern", Qt::DiagCrossPattern)
        ._element("LinearGradientPattern", Qt::LinearGradientPattern)
        ._element("RadialGradientPattern", Qt::RadialGradientPattern)
        ._element("ConicalGradientPattern", Qt::ConicalGradientPattern)
        ._element("TexturePattern", Qt::TexturePattern)
    ;
    _d.CPGF_MD_TEMPLATE _enum<SizeMode>("SizeMode")
        ._element("AbsoluteSize", Qt::AbsoluteSize)
        ._element("RelativeSize", Qt::RelativeSize)
    ;
    _d.CPGF_MD_TEMPLATE _enum<UIEffect>("UIEffect")
        ._element("UI_General", Qt::UI_General)
        ._element("UI_AnimateMenu", Qt::UI_AnimateMenu)
        ._element("UI_FadeMenu", Qt::UI_FadeMenu)
        ._element("UI_AnimateCombo", Qt::UI_AnimateCombo)
        ._element("UI_AnimateTooltip", Qt::UI_AnimateTooltip)
        ._element("UI_FadeTooltip", Qt::UI_FadeTooltip)
        ._element("UI_AnimateToolBox", Qt::UI_AnimateToolBox)
    ;
    _d.CPGF_MD_TEMPLATE _enum<CursorShape>("CursorShape")
        ._element("ArrowCursor", Qt::ArrowCursor)
        ._element("UpArrowCursor", Qt::UpArrowCursor)
        ._element("CrossCursor", Qt::CrossCursor)
        ._element("WaitCursor", Qt::WaitCursor)
        ._element("IBeamCursor", Qt::IBeamCursor)
        ._element("SizeVerCursor", Qt::SizeVerCursor)
        ._element("SizeHorCursor", Qt::SizeHorCursor)
        ._element("SizeBDiagCursor", Qt::SizeBDiagCursor)
        ._element("SizeFDiagCursor", Qt::SizeFDiagCursor)
        ._element("SizeAllCursor", Qt::SizeAllCursor)
        ._element("BlankCursor", Qt::BlankCursor)
        ._element("SplitVCursor", Qt::SplitVCursor)
        ._element("SplitHCursor", Qt::SplitHCursor)
        ._element("PointingHandCursor", Qt::PointingHandCursor)
        ._element("ForbiddenCursor", Qt::ForbiddenCursor)
        ._element("WhatsThisCursor", Qt::WhatsThisCursor)
        ._element("BusyCursor", Qt::BusyCursor)
        ._element("OpenHandCursor", Qt::OpenHandCursor)
        ._element("ClosedHandCursor", Qt::ClosedHandCursor)
        ._element("DragCopyCursor", Qt::DragCopyCursor)
        ._element("DragMoveCursor", Qt::DragMoveCursor)
        ._element("DragLinkCursor", Qt::DragLinkCursor)
        ._element("LastCursor", Qt::LastCursor)
        ._element("BitmapCursor", Qt::BitmapCursor)
        ._element("CustomCursor", Qt::CustomCursor)
    ;
    _d.CPGF_MD_TEMPLATE _enum<TextFormat>("TextFormat")
        ._element("PlainText", Qt::PlainText)
        ._element("RichText", Qt::RichText)
        ._element("AutoText", Qt::AutoText)
    ;
    _d.CPGF_MD_TEMPLATE _enum<AspectRatioMode>("AspectRatioMode")
        ._element("IgnoreAspectRatio", Qt::IgnoreAspectRatio)
        ._element("KeepAspectRatio", Qt::KeepAspectRatio)
        ._element("KeepAspectRatioByExpanding", Qt::KeepAspectRatioByExpanding)
    ;
    _d.CPGF_MD_TEMPLATE _enum<DockWidgetArea>("DockWidgetArea")
        ._element("LeftDockWidgetArea", Qt::LeftDockWidgetArea)
        ._element("RightDockWidgetArea", Qt::RightDockWidgetArea)
        ._element("TopDockWidgetArea", Qt::TopDockWidgetArea)
        ._element("BottomDockWidgetArea", Qt::BottomDockWidgetArea)
        ._element("DockWidgetArea_Mask", Qt::DockWidgetArea_Mask)
        ._element("AllDockWidgetAreas", Qt::AllDockWidgetAreas)
        ._element("NoDockWidgetArea", Qt::NoDockWidgetArea)
    ;
    _d.CPGF_MD_TEMPLATE _enum<DockWidgetAreaSizes>("DockWidgetAreaSizes")
        ._element("NDockWidgetAreas", Qt::NDockWidgetAreas)
    ;
    _d.CPGF_MD_TEMPLATE _enum<ToolBarArea>("ToolBarArea")
        ._element("LeftToolBarArea", Qt::LeftToolBarArea)
        ._element("RightToolBarArea", Qt::RightToolBarArea)
        ._element("TopToolBarArea", Qt::TopToolBarArea)
        ._element("BottomToolBarArea", Qt::BottomToolBarArea)
        ._element("ToolBarArea_Mask", Qt::ToolBarArea_Mask)
        ._element("AllToolBarAreas", Qt::AllToolBarAreas)
        ._element("NoToolBarArea", Qt::NoToolBarArea)
    ;
    _d.CPGF_MD_TEMPLATE _enum<ToolBarAreaSizes>("ToolBarAreaSizes")
        ._element("NToolBarAreas", Qt::NToolBarAreas)
    ;
    _d.CPGF_MD_TEMPLATE _enum<DateFormat>("DateFormat")
        ._element("TextDate", Qt::TextDate)
        ._element("ISODate", Qt::ISODate)
        ._element("SystemLocaleDate", Qt::SystemLocaleDate)
        ._element("LocalDate", Qt::LocalDate)
        ._element("LocaleDate", Qt::LocaleDate)
        ._element("SystemLocaleShortDate", Qt::SystemLocaleShortDate)
        ._element("SystemLocaleLongDate", Qt::SystemLocaleLongDate)
        ._element("DefaultLocaleShortDate", Qt::DefaultLocaleShortDate)
        ._element("DefaultLocaleLongDate", Qt::DefaultLocaleLongDate)
        ._element("RFC2822Date", Qt::RFC2822Date)
    ;
    _d.CPGF_MD_TEMPLATE _enum<TimeSpec>("TimeSpec")
        ._element("LocalTime", Qt::LocalTime)
        ._element("UTC", Qt::UTC)
        ._element("OffsetFromUTC", Qt::OffsetFromUTC)
        ._element("TimeZone", Qt::TimeZone)
    ;
    _d.CPGF_MD_TEMPLATE _enum<DayOfWeek>("DayOfWeek")
        ._element("Monday", Qt::Monday)
        ._element("Tuesday", Qt::Tuesday)
        ._element("Wednesday", Qt::Wednesday)
        ._element("Thursday", Qt::Thursday)
        ._element("Friday", Qt::Friday)
        ._element("Saturday", Qt::Saturday)
        ._element("Sunday", Qt::Sunday)
    ;
    _d.CPGF_MD_TEMPLATE _enum<ScrollBarPolicy>("ScrollBarPolicy")
        ._element("ScrollBarAsNeeded", Qt::ScrollBarAsNeeded)
        ._element("ScrollBarAlwaysOff", Qt::ScrollBarAlwaysOff)
        ._element("ScrollBarAlwaysOn", Qt::ScrollBarAlwaysOn)
    ;
    _d.CPGF_MD_TEMPLATE _enum<CaseSensitivity>("CaseSensitivity")
        ._element("CaseInsensitive", Qt::CaseInsensitive)
        ._element("CaseSensitive", Qt::CaseSensitive)
    ;
    _d.CPGF_MD_TEMPLATE _enum<Corner>("Corner")
        ._element("TopLeftCorner", Qt::TopLeftCorner)
        ._element("TopRightCorner", Qt::TopRightCorner)
        ._element("BottomLeftCorner", Qt::BottomLeftCorner)
        ._element("BottomRightCorner", Qt::BottomRightCorner)
    ;
    _d.CPGF_MD_TEMPLATE _enum<Edge>("Edge")
        ._element("TopEdge", Qt::TopEdge)
        ._element("LeftEdge", Qt::LeftEdge)
        ._element("RightEdge", Qt::RightEdge)
        ._element("BottomEdge", Qt::BottomEdge)
    ;
    _d.CPGF_MD_TEMPLATE _enum<ConnectionType>("ConnectionType")
        ._element("AutoConnection", Qt::AutoConnection)
        ._element("DirectConnection", Qt::DirectConnection)
        ._element("QueuedConnection", Qt::QueuedConnection)
        ._element("BlockingQueuedConnection", Qt::BlockingQueuedConnection)
        ._element("UniqueConnection", Qt::UniqueConnection)
    ;
    _d.CPGF_MD_TEMPLATE _enum<ShortcutContext>("ShortcutContext")
        ._element("WidgetShortcut", Qt::WidgetShortcut)
        ._element("WindowShortcut", Qt::WindowShortcut)
        ._element("ApplicationShortcut", Qt::ApplicationShortcut)
        ._element("WidgetWithChildrenShortcut", Qt::WidgetWithChildrenShortcut)
    ;
    _d.CPGF_MD_TEMPLATE _enum<FillRule>("FillRule")
        ._element("OddEvenFill", Qt::OddEvenFill)
        ._element("WindingFill", Qt::WindingFill)
    ;
    _d.CPGF_MD_TEMPLATE _enum<MaskMode>("MaskMode")
        ._element("MaskInColor", Qt::MaskInColor)
        ._element("MaskOutColor", Qt::MaskOutColor)
    ;
    _d.CPGF_MD_TEMPLATE _enum<ClipOperation>("ClipOperation")
        ._element("NoClip", Qt::NoClip)
        ._element("ReplaceClip", Qt::ReplaceClip)
        ._element("IntersectClip", Qt::IntersectClip)
    ;
    _d.CPGF_MD_TEMPLATE _enum<ItemSelectionMode>("ItemSelectionMode")
        ._element("ContainsItemShape", Qt::ContainsItemShape)
        ._element("IntersectsItemShape", Qt::IntersectsItemShape)
        ._element("ContainsItemBoundingRect", Qt::ContainsItemBoundingRect)
        ._element("IntersectsItemBoundingRect", Qt::IntersectsItemBoundingRect)
    ;
    _d.CPGF_MD_TEMPLATE _enum<ItemSelectionOperation>("ItemSelectionOperation")
        ._element("ReplaceSelection", Qt::ReplaceSelection)
        ._element("AddToSelection", Qt::AddToSelection)
    ;
    _d.CPGF_MD_TEMPLATE _enum<TransformationMode>("TransformationMode")
        ._element("FastTransformation", Qt::FastTransformation)
        ._element("SmoothTransformation", Qt::SmoothTransformation)
    ;
    _d.CPGF_MD_TEMPLATE _enum<Axis>("Axis")
        ._element("XAxis", Qt::XAxis)
        ._element("YAxis", Qt::YAxis)
        ._element("ZAxis", Qt::ZAxis)
    ;
    _d.CPGF_MD_TEMPLATE _enum<FocusReason>("FocusReason")
        ._element("MouseFocusReason", Qt::MouseFocusReason)
        ._element("TabFocusReason", Qt::TabFocusReason)
        ._element("BacktabFocusReason", Qt::BacktabFocusReason)
        ._element("ActiveWindowFocusReason", Qt::ActiveWindowFocusReason)
        ._element("PopupFocusReason", Qt::PopupFocusReason)
        ._element("ShortcutFocusReason", Qt::ShortcutFocusReason)
        ._element("MenuBarFocusReason", Qt::MenuBarFocusReason)
        ._element("OtherFocusReason", Qt::OtherFocusReason)
        ._element("NoFocusReason", Qt::NoFocusReason)
    ;
    _d.CPGF_MD_TEMPLATE _enum<ContextMenuPolicy>("ContextMenuPolicy")
        ._element("NoContextMenu", Qt::NoContextMenu)
        ._element("DefaultContextMenu", Qt::DefaultContextMenu)
        ._element("ActionsContextMenu", Qt::ActionsContextMenu)
        ._element("CustomContextMenu", Qt::CustomContextMenu)
        ._element("PreventContextMenu", Qt::PreventContextMenu)
    ;
    _d.CPGF_MD_TEMPLATE _enum<InputMethodQuery>("InputMethodQuery")
        ._element("ImEnabled", Qt::ImEnabled)
        ._element("ImCursorRectangle", Qt::ImCursorRectangle)
        ._element("ImMicroFocus", Qt::ImMicroFocus)
        ._element("ImFont", Qt::ImFont)
        ._element("ImCursorPosition", Qt::ImCursorPosition)
        ._element("ImSurroundingText", Qt::ImSurroundingText)
        ._element("ImCurrentSelection", Qt::ImCurrentSelection)
        ._element("ImMaximumTextLength", Qt::ImMaximumTextLength)
        ._element("ImAnchorPosition", Qt::ImAnchorPosition)
        ._element("ImHints", Qt::ImHints)
        ._element("ImPreferredLanguage", Qt::ImPreferredLanguage)
        ._element("ImAbsolutePosition", Qt::ImAbsolutePosition)
        ._element("ImTextBeforeCursor", Qt::ImTextBeforeCursor)
        ._element("ImTextAfterCursor", Qt::ImTextAfterCursor)
        ._element("ImPlatformData", Qt::ImPlatformData)
        ._element("ImQueryInput", Qt::ImQueryInput)
        ._element("ImQueryAll", Qt::ImQueryAll)
    ;
    _d.CPGF_MD_TEMPLATE _enum<InputMethodHint>("InputMethodHint")
        ._element("ImhNone", Qt::ImhNone)
        ._element("ImhHiddenText", Qt::ImhHiddenText)
        ._element("ImhSensitiveData", Qt::ImhSensitiveData)
        ._element("ImhNoAutoUppercase", Qt::ImhNoAutoUppercase)
        ._element("ImhPreferNumbers", Qt::ImhPreferNumbers)
        ._element("ImhPreferUppercase", Qt::ImhPreferUppercase)
        ._element("ImhPreferLowercase", Qt::ImhPreferLowercase)
        ._element("ImhNoPredictiveText", Qt::ImhNoPredictiveText)
        ._element("ImhDate", Qt::ImhDate)
        ._element("ImhTime", Qt::ImhTime)
        ._element("ImhPreferLatin", Qt::ImhPreferLatin)
        ._element("ImhMultiLine", Qt::ImhMultiLine)
        ._element("ImhDigitsOnly", Qt::ImhDigitsOnly)
        ._element("ImhFormattedNumbersOnly", Qt::ImhFormattedNumbersOnly)
        ._element("ImhUppercaseOnly", Qt::ImhUppercaseOnly)
        ._element("ImhLowercaseOnly", Qt::ImhLowercaseOnly)
        ._element("ImhDialableCharactersOnly", Qt::ImhDialableCharactersOnly)
        ._element("ImhEmailCharactersOnly", Qt::ImhEmailCharactersOnly)
        ._element("ImhUrlCharactersOnly", Qt::ImhUrlCharactersOnly)
        ._element("ImhLatinOnly", Qt::ImhLatinOnly)
        ._element("ImhExclusiveInputMask", Qt::ImhExclusiveInputMask)
    ;
    _d.CPGF_MD_TEMPLATE _enum<ToolButtonStyle>("ToolButtonStyle")
        ._element("ToolButtonIconOnly", Qt::ToolButtonIconOnly)
        ._element("ToolButtonTextOnly", Qt::ToolButtonTextOnly)
        ._element("ToolButtonTextBesideIcon", Qt::ToolButtonTextBesideIcon)
        ._element("ToolButtonTextUnderIcon", Qt::ToolButtonTextUnderIcon)
        ._element("ToolButtonFollowStyle", Qt::ToolButtonFollowStyle)
    ;
    _d.CPGF_MD_TEMPLATE _enum<LayoutDirection>("LayoutDirection")
        ._element("LeftToRight", Qt::LeftToRight)
        ._element("RightToLeft", Qt::RightToLeft)
        ._element("LayoutDirectionAuto", Qt::LayoutDirectionAuto)
    ;
    _d.CPGF_MD_TEMPLATE _enum<AnchorPoint>("AnchorPoint")
        ._element("AnchorLeft", Qt::AnchorLeft)
        ._element("AnchorHorizontalCenter", Qt::AnchorHorizontalCenter)
        ._element("AnchorRight", Qt::AnchorRight)
        ._element("AnchorTop", Qt::AnchorTop)
        ._element("AnchorVerticalCenter", Qt::AnchorVerticalCenter)
        ._element("AnchorBottom", Qt::AnchorBottom)
    ;
    _d.CPGF_MD_TEMPLATE _enum<FindChildOption>("FindChildOption")
        ._element("FindDirectChildrenOnly", Qt::FindDirectChildrenOnly)
        ._element("FindChildrenRecursively", Qt::FindChildrenRecursively)
    ;
    _d.CPGF_MD_TEMPLATE _enum<DropAction>("DropAction")
        ._element("CopyAction", Qt::CopyAction)
        ._element("MoveAction", Qt::MoveAction)
        ._element("LinkAction", Qt::LinkAction)
        ._element("ActionMask", Qt::ActionMask)
        ._element("TargetMoveAction", Qt::TargetMoveAction)
        ._element("IgnoreAction", Qt::IgnoreAction)
    ;
    _d.CPGF_MD_TEMPLATE _enum<CheckState>("CheckState")
        ._element("Unchecked", Qt::Unchecked)
        ._element("PartiallyChecked", Qt::PartiallyChecked)
        ._element("Checked", Qt::Checked)
    ;
    _d.CPGF_MD_TEMPLATE _enum<ItemDataRole>("ItemDataRole")
        ._element("DisplayRole", Qt::DisplayRole)
        ._element("DecorationRole", Qt::DecorationRole)
        ._element("EditRole", Qt::EditRole)
        ._element("ToolTipRole", Qt::ToolTipRole)
        ._element("StatusTipRole", Qt::StatusTipRole)
        ._element("WhatsThisRole", Qt::WhatsThisRole)
        ._element("FontRole", Qt::FontRole)
        ._element("TextAlignmentRole", Qt::TextAlignmentRole)
        ._element("BackgroundColorRole", Qt::BackgroundColorRole)
        ._element("BackgroundRole", Qt::BackgroundRole)
        ._element("TextColorRole", Qt::TextColorRole)
        ._element("ForegroundRole", Qt::ForegroundRole)
        ._element("CheckStateRole", Qt::CheckStateRole)
        ._element("AccessibleTextRole", Qt::AccessibleTextRole)
        ._element("AccessibleDescriptionRole", Qt::AccessibleDescriptionRole)
        ._element("SizeHintRole", Qt::SizeHintRole)
        ._element("InitialSortOrderRole", Qt::InitialSortOrderRole)
        ._element("DisplayPropertyRole", Qt::DisplayPropertyRole)
        ._element("DecorationPropertyRole", Qt::DecorationPropertyRole)
        ._element("ToolTipPropertyRole", Qt::ToolTipPropertyRole)
        ._element("StatusTipPropertyRole", Qt::StatusTipPropertyRole)
        ._element("WhatsThisPropertyRole", Qt::WhatsThisPropertyRole)
        ._element("UserRole", Qt::UserRole)
    ;
    _d.CPGF_MD_TEMPLATE _enum<ItemFlag>("ItemFlag")
        ._element("NoItemFlags", Qt::NoItemFlags)
        ._element("ItemIsSelectable", Qt::ItemIsSelectable)
        ._element("ItemIsEditable", Qt::ItemIsEditable)
        ._element("ItemIsDragEnabled", Qt::ItemIsDragEnabled)
        ._element("ItemIsDropEnabled", Qt::ItemIsDropEnabled)
        ._element("ItemIsUserCheckable", Qt::ItemIsUserCheckable)
        ._element("ItemIsEnabled", Qt::ItemIsEnabled)
        ._element("ItemIsTristate", Qt::ItemIsTristate)
        ._element("ItemNeverHasChildren", Qt::ItemNeverHasChildren)
        ._element("ItemIsUserTristate", Qt::ItemIsUserTristate)
    ;
    _d.CPGF_MD_TEMPLATE _enum<MatchFlag>("MatchFlag")
        ._element("MatchExactly", Qt::MatchExactly)
        ._element("MatchContains", Qt::MatchContains)
        ._element("MatchStartsWith", Qt::MatchStartsWith)
        ._element("MatchEndsWith", Qt::MatchEndsWith)
        ._element("MatchRegExp", Qt::MatchRegExp)
        ._element("MatchWildcard", Qt::MatchWildcard)
        ._element("MatchFixedString", Qt::MatchFixedString)
        ._element("MatchCaseSensitive", Qt::MatchCaseSensitive)
        ._element("MatchWrap", Qt::MatchWrap)
        ._element("MatchRecursive", Qt::MatchRecursive)
    ;
    _d.CPGF_MD_TEMPLATE _enum<WindowModality>("WindowModality")
        ._element("NonModal", Qt::NonModal)
        ._element("WindowModal", Qt::WindowModal)
        ._element("ApplicationModal", Qt::ApplicationModal)
    ;
    _d.CPGF_MD_TEMPLATE _enum<TextInteractionFlag>("TextInteractionFlag")
        ._element("NoTextInteraction", Qt::NoTextInteraction)
        ._element("TextSelectableByMouse", Qt::TextSelectableByMouse)
        ._element("TextSelectableByKeyboard", Qt::TextSelectableByKeyboard)
        ._element("LinksAccessibleByMouse", Qt::LinksAccessibleByMouse)
        ._element("LinksAccessibleByKeyboard", Qt::LinksAccessibleByKeyboard)
        ._element("TextEditable", Qt::TextEditable)
        ._element("TextEditorInteraction", Qt::TextEditorInteraction)
        ._element("TextBrowserInteraction", Qt::TextBrowserInteraction)
    ;
    _d.CPGF_MD_TEMPLATE _enum<EventPriority>("EventPriority")
        ._element("HighEventPriority", Qt::HighEventPriority)
        ._element("NormalEventPriority", Qt::NormalEventPriority)
        ._element("LowEventPriority", Qt::LowEventPriority)
    ;
    _d.CPGF_MD_TEMPLATE _enum<SizeHint>("SizeHint")
        ._element("MinimumSize", Qt::MinimumSize)
        ._element("PreferredSize", Qt::PreferredSize)
        ._element("MaximumSize", Qt::MaximumSize)
        ._element("MinimumDescent", Qt::MinimumDescent)
        ._element("NSizeHints", Qt::NSizeHints)
    ;
    _d.CPGF_MD_TEMPLATE _enum<WindowFrameSection>("WindowFrameSection")
        ._element("NoSection", Qt::NoSection)
        ._element("LeftSection", Qt::LeftSection)
        ._element("TopLeftSection", Qt::TopLeftSection)
        ._element("TopSection", Qt::TopSection)
        ._element("TopRightSection", Qt::TopRightSection)
        ._element("RightSection", Qt::RightSection)
        ._element("BottomRightSection", Qt::BottomRightSection)
        ._element("BottomSection", Qt::BottomSection)
        ._element("BottomLeftSection", Qt::BottomLeftSection)
        ._element("TitleBarArea", Qt::TitleBarArea)
    ;
    _d.CPGF_MD_TEMPLATE _enum<Initialization>("Initialization")
        ._element("Uninitialized", Qt::Uninitialized)
    ;
    _d.CPGF_MD_TEMPLATE _enum<CoordinateSystem>("CoordinateSystem")
        ._element("DeviceCoordinates", Qt::DeviceCoordinates)
        ._element("LogicalCoordinates", Qt::LogicalCoordinates)
    ;
    _d.CPGF_MD_TEMPLATE _enum<TouchPointState>("TouchPointState")
        ._element("TouchPointPressed", Qt::TouchPointPressed)
        ._element("TouchPointMoved", Qt::TouchPointMoved)
        ._element("TouchPointStationary", Qt::TouchPointStationary)
        ._element("TouchPointReleased", Qt::TouchPointReleased)
    ;
    _d.CPGF_MD_TEMPLATE _enum<GestureState>("GestureState")
        ._element("NoGesture", Qt::NoGesture)
        ._element("GestureStarted", Qt::GestureStarted)
        ._element("GestureUpdated", Qt::GestureUpdated)
        ._element("GestureFinished", Qt::GestureFinished)
        ._element("GestureCanceled", Qt::GestureCanceled)
    ;
    _d.CPGF_MD_TEMPLATE _enum<GestureType>("GestureType")
        ._element("TapGesture", Qt::TapGesture)
        ._element("TapAndHoldGesture", Qt::TapAndHoldGesture)
        ._element("PanGesture", Qt::PanGesture)
        ._element("PinchGesture", Qt::PinchGesture)
        ._element("SwipeGesture", Qt::SwipeGesture)
        ._element("CustomGesture", Qt::CustomGesture)
        ._element("LastGestureType", Qt::LastGestureType)
    ;
    _d.CPGF_MD_TEMPLATE _enum<GestureFlag>("GestureFlag")
        ._element("DontStartGestureOnChildren", Qt::DontStartGestureOnChildren)
        ._element("ReceivePartialGestures", Qt::ReceivePartialGestures)
        ._element("IgnoredGesturesPropagateToParent", Qt::IgnoredGesturesPropagateToParent)
    ;
    _d.CPGF_MD_TEMPLATE _enum<NativeGestureType>("NativeGestureType")
        ._element("BeginNativeGesture", Qt::BeginNativeGesture)
        ._element("EndNativeGesture", Qt::EndNativeGesture)
        ._element("PanNativeGesture", Qt::PanNativeGesture)
        ._element("ZoomNativeGesture", Qt::ZoomNativeGesture)
        ._element("SmartZoomNativeGesture", Qt::SmartZoomNativeGesture)
        ._element("RotateNativeGesture", Qt::RotateNativeGesture)
        ._element("SwipeNativeGesture", Qt::SwipeNativeGesture)
    ;
    _d.CPGF_MD_TEMPLATE _enum<NavigationMode>("NavigationMode")
        ._element("NavigationModeNone", Qt::NavigationModeNone)
        ._element("NavigationModeKeypadTabOrder", Qt::NavigationModeKeypadTabOrder)
        ._element("NavigationModeKeypadDirectional", Qt::NavigationModeKeypadDirectional)
        ._element("NavigationModeCursorAuto", Qt::NavigationModeCursorAuto)
        ._element("NavigationModeCursorForceVisible", Qt::NavigationModeCursorForceVisible)
    ;
    _d.CPGF_MD_TEMPLATE _enum<CursorMoveStyle>("CursorMoveStyle")
        ._element("LogicalMoveStyle", Qt::LogicalMoveStyle)
        ._element("VisualMoveStyle", Qt::VisualMoveStyle)
    ;
    _d.CPGF_MD_TEMPLATE _enum<TimerType>("TimerType")
        ._element("PreciseTimer", Qt::PreciseTimer)
        ._element("CoarseTimer", Qt::CoarseTimer)
        ._element("VeryCoarseTimer", Qt::VeryCoarseTimer)
    ;
    _d.CPGF_MD_TEMPLATE _enum<ScrollPhase>("ScrollPhase")
        ._element("ScrollBegin", Qt::ScrollBegin)
        ._element("ScrollUpdate", Qt::ScrollUpdate)
        ._element("ScrollEnd", Qt::ScrollEnd)
    ;
    _d.CPGF_MD_TEMPLATE _enum<MouseEventSource>("MouseEventSource")
        ._element("MouseEventNotSynthesized", Qt::MouseEventNotSynthesized)
        ._element("MouseEventSynthesizedBySystem", Qt::MouseEventSynthesizedBySystem)
        ._element("MouseEventSynthesizedByQt", Qt::MouseEventSynthesizedByQt)
    ;
    _d.CPGF_MD_TEMPLATE _enum<MouseEventFlag>("MouseEventFlag")
        ._element("MouseEventCreatedDoubleClick", Qt::MouseEventCreatedDoubleClick)
        ._element("MouseEventFlagMask", Qt::MouseEventFlagMask)
    ;
    {
        GDefineMetaClass<QFlags<typename Qt::KeyboardModifier > > _t_d = GDefineMetaClass<QFlags<typename Qt::KeyboardModifier > >::lazyDeclare("KeyboardModifiers", &buildMetaClass_QFlags<GDefineMetaClass<QFlags<typename Qt::KeyboardModifier > >, typename Qt::KeyboardModifier >);
        _d._class(_t_d);
    }
    {
        GDefineMetaClass<QFlags<typename Qt::MouseButton > > _t_d = GDefineMetaClass<QFlags<typename Qt::MouseButton > >::lazyDeclare("MouseButtons", &buildMetaClass_QFlags<GDefineMetaClass<QFlags<typename Qt::MouseButton > >, typename Qt::MouseButton >);
        _d._class(_t_d);
    }
    {
        GDefineMetaClass<QFlags<typename Qt::Orientation > > _t_d = GDefineMetaClass<QFlags<typename Qt::Orientation > >::lazyDeclare("Orientations", &buildMetaClass_QFlags<GDefineMetaClass<QFlags<typename Qt::Orientation > >, typename Qt::Orientation >);
        _d._class(_t_d);
    }
    {
        GDefineMetaClass<QFlags<typename Qt::AlignmentFlag > > _t_d = GDefineMetaClass<QFlags<typename Qt::AlignmentFlag > >::lazyDeclare("Alignment", &buildMetaClass_QFlags<GDefineMetaClass<QFlags<typename Qt::AlignmentFlag > >, typename Qt::AlignmentFlag >);
        _d._class(_t_d);
    }
    {
        GDefineMetaClass<QFlags<typename Qt::WindowType > > _t_d = GDefineMetaClass<QFlags<typename Qt::WindowType > >::lazyDeclare("WindowFlags", &buildMetaClass_QFlags<GDefineMetaClass<QFlags<typename Qt::WindowType > >, typename Qt::WindowType >);
        _d._class(_t_d);
    }
    {
        GDefineMetaClass<QFlags<typename Qt::WindowState > > _t_d = GDefineMetaClass<QFlags<typename Qt::WindowState > >::lazyDeclare("WindowStates", &buildMetaClass_QFlags<GDefineMetaClass<QFlags<typename Qt::WindowState > >, typename Qt::WindowState >);
        _d._class(_t_d);
    }
    {
        GDefineMetaClass<QFlags<typename Qt::ApplicationState > > _t_d = GDefineMetaClass<QFlags<typename Qt::ApplicationState > >::lazyDeclare("ApplicationStates", &buildMetaClass_QFlags<GDefineMetaClass<QFlags<typename Qt::ApplicationState > >, typename Qt::ApplicationState >);
        _d._class(_t_d);
    }
    {
        GDefineMetaClass<QFlags<typename Qt::ScreenOrientation > > _t_d = GDefineMetaClass<QFlags<typename Qt::ScreenOrientation > >::lazyDeclare("ScreenOrientations", &buildMetaClass_QFlags<GDefineMetaClass<QFlags<typename Qt::ScreenOrientation > >, typename Qt::ScreenOrientation >);
        _d._class(_t_d);
    }
    {
        GDefineMetaClass<QFlags<typename Qt::ImageConversionFlag > > _t_d = GDefineMetaClass<QFlags<typename Qt::ImageConversionFlag > >::lazyDeclare("ImageConversionFlags", &buildMetaClass_QFlags<GDefineMetaClass<QFlags<typename Qt::ImageConversionFlag > >, typename Qt::ImageConversionFlag >);
        _d._class(_t_d);
    }
    {
        GDefineMetaClass<QFlags<typename Qt::DockWidgetArea > > _t_d = GDefineMetaClass<QFlags<typename Qt::DockWidgetArea > >::lazyDeclare("DockWidgetAreas", &buildMetaClass_QFlags<GDefineMetaClass<QFlags<typename Qt::DockWidgetArea > >, typename Qt::DockWidgetArea >);
        _d._class(_t_d);
    }
    {
        GDefineMetaClass<QFlags<typename Qt::ToolBarArea > > _t_d = GDefineMetaClass<QFlags<typename Qt::ToolBarArea > >::lazyDeclare("ToolBarAreas", &buildMetaClass_QFlags<GDefineMetaClass<QFlags<typename Qt::ToolBarArea > >, typename Qt::ToolBarArea >);
        _d._class(_t_d);
    }
    {
        GDefineMetaClass<QFlags<typename Qt::Edge > > _t_d = GDefineMetaClass<QFlags<typename Qt::Edge > >::lazyDeclare("Edges", &buildMetaClass_QFlags<GDefineMetaClass<QFlags<typename Qt::Edge > >, typename Qt::Edge >);
        _d._class(_t_d);
    }
    {
        GDefineMetaClass<QFlags<typename Qt::InputMethodQuery > > _t_d = GDefineMetaClass<QFlags<typename Qt::InputMethodQuery > >::lazyDeclare("InputMethodQueries", &buildMetaClass_QFlags<GDefineMetaClass<QFlags<typename Qt::InputMethodQuery > >, typename Qt::InputMethodQuery >);
        _d._class(_t_d);
    }
    {
        GDefineMetaClass<QFlags<typename Qt::InputMethodHint > > _t_d = GDefineMetaClass<QFlags<typename Qt::InputMethodHint > >::lazyDeclare("InputMethodHints", &buildMetaClass_QFlags<GDefineMetaClass<QFlags<typename Qt::InputMethodHint > >, typename Qt::InputMethodHint >);
        _d._class(_t_d);
    }
    {
        GDefineMetaClass<QFlags<typename Qt::FindChildOption > > _t_d = GDefineMetaClass<QFlags<typename Qt::FindChildOption > >::lazyDeclare("FindChildOptions", &buildMetaClass_QFlags<GDefineMetaClass<QFlags<typename Qt::FindChildOption > >, typename Qt::FindChildOption >);
        _d._class(_t_d);
    }
    {
        GDefineMetaClass<QFlags<typename Qt::DropAction > > _t_d = GDefineMetaClass<QFlags<typename Qt::DropAction > >::lazyDeclare("DropActions", &buildMetaClass_QFlags<GDefineMetaClass<QFlags<typename Qt::DropAction > >, typename Qt::DropAction >);
        _d._class(_t_d);
    }
    {
        GDefineMetaClass<QFlags<typename Qt::ItemFlag > > _t_d = GDefineMetaClass<QFlags<typename Qt::ItemFlag > >::lazyDeclare("ItemFlags", &buildMetaClass_QFlags<GDefineMetaClass<QFlags<typename Qt::ItemFlag > >, typename Qt::ItemFlag >);
        _d._class(_t_d);
    }
    {
        GDefineMetaClass<QFlags<typename Qt::MatchFlag > > _t_d = GDefineMetaClass<QFlags<typename Qt::MatchFlag > >::lazyDeclare("MatchFlags", &buildMetaClass_QFlags<GDefineMetaClass<QFlags<typename Qt::MatchFlag > >, typename Qt::MatchFlag >);
        _d._class(_t_d);
    }
    {
        GDefineMetaClass<QFlags<typename Qt::TextInteractionFlag > > _t_d = GDefineMetaClass<QFlags<typename Qt::TextInteractionFlag > >::lazyDeclare("TextInteractionFlags", &buildMetaClass_QFlags<GDefineMetaClass<QFlags<typename Qt::TextInteractionFlag > >, typename Qt::TextInteractionFlag >);
        _d._class(_t_d);
    }
    {
        GDefineMetaClass<QFlags<typename Qt::TouchPointState > > _t_d = GDefineMetaClass<QFlags<typename Qt::TouchPointState > >::lazyDeclare("TouchPointStates", &buildMetaClass_QFlags<GDefineMetaClass<QFlags<typename Qt::TouchPointState > >, typename Qt::TouchPointState >);
        _d._class(_t_d);
    }
    {
        GDefineMetaClass<QFlags<typename Qt::GestureFlag > > _t_d = GDefineMetaClass<QFlags<typename Qt::GestureFlag > >::lazyDeclare("GestureFlags", &buildMetaClass_QFlags<GDefineMetaClass<QFlags<typename Qt::GestureFlag > >, typename Qt::GestureFlag >);
        _d._class(_t_d);
    }
    {
        GDefineMetaClass<QFlags<typename Qt::MouseEventFlag > > _t_d = GDefineMetaClass<QFlags<typename Qt::MouseEventFlag > >::lazyDeclare("MouseEventFlags", &buildMetaClass_QFlags<GDefineMetaClass<QFlags<typename Qt::MouseEventFlag > >, typename Qt::MouseEventFlag >);
        _d._class(_t_d);
    }
}


template <typename D>
void buildMetaClass_QInternal(D _d)
{
    (void)_d;
    using namespace cpgf;
    
    _d.CPGF_MD_TEMPLATE _method("registerCallback", &D::ClassType::registerCallback);
    _d.CPGF_MD_TEMPLATE _method("unregisterCallback", &D::ClassType::unregisterCallback);
    _d.CPGF_MD_TEMPLATE _method("activateCallbacks", &D::ClassType::activateCallbacks);
    _d.CPGF_MD_TEMPLATE _enum<typename D::ClassType::PaintDeviceFlags>("PaintDeviceFlags")
        ._element("UnknownDevice", D::ClassType::UnknownDevice)
        ._element("Widget", D::ClassType::Widget)
        ._element("Pixmap", D::ClassType::Pixmap)
        ._element("Image", D::ClassType::Image)
        ._element("Printer", D::ClassType::Printer)
        ._element("Picture", D::ClassType::Picture)
        ._element("Pbuffer", D::ClassType::Pbuffer)
        ._element("FramebufferObject", D::ClassType::FramebufferObject)
        ._element("CustomRaster", D::ClassType::CustomRaster)
        ._element("MacQuartz", D::ClassType::MacQuartz)
        ._element("PaintBuffer", D::ClassType::PaintBuffer)
        ._element("OpenGL", D::ClassType::OpenGL)
    ;
    _d.CPGF_MD_TEMPLATE _enum<typename D::ClassType::RelayoutType>("RelayoutType")
        ._element("RelayoutNormal", D::ClassType::RelayoutNormal)
        ._element("RelayoutDragging", D::ClassType::RelayoutDragging)
        ._element("RelayoutDropped", D::ClassType::RelayoutDropped)
    ;
    _d.CPGF_MD_TEMPLATE _enum<typename D::ClassType::DockPosition>("DockPosition")
        ._element("LeftDock", D::ClassType::LeftDock)
        ._element("RightDock", D::ClassType::RightDock)
        ._element("TopDock", D::ClassType::TopDock)
        ._element("BottomDock", D::ClassType::BottomDock)
        ._element("DockCount", D::ClassType::DockCount)
    ;
    _d.CPGF_MD_TEMPLATE _enum<typename D::ClassType::Callback>("Callback")
        ._element("EventNotifyCallback", D::ClassType::EventNotifyCallback)
        ._element("LastCallback", D::ClassType::LastCallback)
    ;
}


} // namespace qt_metadata




#include "cpgf/metadata/private/gmetadata_footer.h"


#endif
